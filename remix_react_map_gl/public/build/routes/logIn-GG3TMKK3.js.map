{
  "version": 3,
  "sources": ["empty-module:~/services/auth.server", "browser-route-module:C:\\Users\\Ruben\\OneDrive\\Bureaublad\\OrbitStage2022\\OrbitStage\\remix_react_map_gl\\app\\routes\\logIn.tsx?browser", "../../../app/routes/logIn.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default } from \"C:\\\\Users\\\\Ruben\\\\OneDrive\\\\Bureaublad\\\\OrbitStage2022\\\\OrbitStage\\\\remix_react_map_gl\\\\app\\\\routes\\\\logIn.tsx\";", "import { PrismaClient } from \"@prisma/client\";\r\nimport { ActionFunction, Form } from \"remix\";\r\nimport { authenticator } from \"~/services/auth.server\";\r\n\r\nexport default function Test() {\r\n  return (\r\n    <>\r\n      <Form id=\"form\" method='post'>\r\n        <label>\r\n          Name:    \r\n          <span style={{'marginRight': 30}}></span>\r\n          <input type=\"text\" name=\"name\" />\r\n        </label>\r\n        <br/>\r\n        <label className='password'>\r\n          Password:\r\n          <span style={{'marginRight': 7}}></span>\r\n          <input type=\"text\" name=\"password\" />\r\n        </label>\r\n        <br/>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport async function loader(){\r\n  const prisma = new PrismaClient();\r\n  const allUsers = await prisma.contact.findMany();\r\n  console.log(\"allUsers\", allUsers);\r\n  await prisma.$disconnect();\r\n  return allUsers;\r\n}\r\n\r\n\r\nexport const action: ActionFunction = async ({ request, context }) => {\r\n  return await authenticator.authenticate(\"form\", request, {\r\n    \r\n    successRedirect: \"/provinces\",\r\n    failureRedirect: \"http://localhost:3000/logIn\",\r\n    context, // optional\r\n  });\r\n};\r\n\r\nexport let action2: ActionFunction = async ({ request }) => {\r\n  await authenticator.logout(request, { redirectTo: \"/logIn\" });\r\n};"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAEA,kBAA8B;AAEf,gBAAgB;AAC7B,SACE,0DACE,oCAAC,MAAD;AAAA,IAAM,IAAG;AAAA,IAAO,QAAO;AAAA,KACrB,oCAAC,SAAD,MAAO,SAEL,oCAAC,QAAD;AAAA,IAAM,OAAO,EAAC,eAAe;AAAA,MAC7B,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,OAE1B,oCAAC,MAAD,OACA,oCAAC,SAAD;AAAA,IAAO,WAAU;AAAA,KAAW,aAE1B,oCAAC,QAAD;AAAA,IAAM,OAAO,EAAC,eAAe;AAAA,MAC7B,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAO,MAAK;AAAA,OAE1B,oCAAC,MAAD,OACA,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,OAAM;AAAA;AAAA;",
  "names": []
}
